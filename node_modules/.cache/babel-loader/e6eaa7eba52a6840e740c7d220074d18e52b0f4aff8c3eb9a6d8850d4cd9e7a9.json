{"ast":null,"code":"var _jsxFileName = \"C:\\\\shakiraExpense\\\\react-expense-traker\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Expenses.css';\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpenseList from \"./ExpenseList\";\nimport ExpensesChart from './ExpensesChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2020');\n  function filterChangeHandler(selectedYear) {\n    setFilteredYear(selectedYear);\n  }\n  const filteredExpenses = props.items.filter(filterItems => filterItems.date.getFullYear().toString() === filteredYear);\n\n  // let expenseContent = <p>Expenses not found</p> \n\n  // if(filteredExpenses.length > 0){\n  //     expenseContent= (\n  //         filteredExpenses.map((expense) => (\n  //           <ExpenseItem\n  //             key={expense.id}\n  //             title={expense.title}\n  //             amount={expense.amount}\n  //             date={expense.date}\n  //           />\n  //         ))\n  //       )\n  // }\n\n  console.log(filteredExpenses);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      onChangeFilter: filterChangeHandler,\n      selectedYear: filteredYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesChart, {\n      expenses: filteredExpenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseList, {\n      filteredExpenses: filteredExpenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Expenses, \"d6AxVjxjRbYO2YFEia8LjUybrDc=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","Card","ExpensesFilter","ExpenseList","ExpensesChart","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","filterItems","date","getFullYear","toString","console","log","className","children","onChangeFilter","fileName","_jsxFileName","lineNumber","columnNumber","expenses","_c","$RefreshReg$"],"sources":["C:/shakiraExpense/react-expense-traker/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Expenses.css';\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n  function filterChangeHandler(selectedYear) {\r\n    setFilteredYear(selectedYear);\r\n  }\r\n\r\n  const filteredExpenses = props.items.filter(filterItems => filterItems.date.getFullYear().toString() === filteredYear);\r\n\r\n  // let expenseContent = <p>Expenses not found</p> \r\n\r\n  // if(filteredExpenses.length > 0){\r\n  //     expenseContent= (\r\n  //         filteredExpenses.map((expense) => (\r\n  //           <ExpenseItem\r\n  //             key={expense.id}\r\n  //             title={expense.title}\r\n  //             amount={expense.amount}\r\n  //             date={expense.date}\r\n  //           />\r\n  //         ))\r\n  //       )\r\n  // }\r\n\r\n  console.log(filteredExpenses)\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter onChangeFilter={filterChangeHandler} selectedYear={filteredYear} />\r\n      <ExpensesChart expenses={filteredExpenses}/>\r\n      <ExpenseList filteredExpenses={filteredExpenses} />\r\n\r\n      {/* {expenseContent} */}\r\n\r\n      {/* /** By ternery operator  {\r\n        filteredExpenses.length == 0 ? <p>Expenses not found</p> : (\r\n            filteredExpenses.map((expense) => (\r\n              <ExpenseItem\r\n                key={expense.id}\r\n                title={expense.title}\r\n                amount={expense.amount}\r\n                date={expense.date}\r\n              />\r\n            ))\r\n          )\r\n       } */}\r\n\r\n      {/* By Logical and operator {\r\n        filteredExpenses.length === 0 && <p>Expenses not found</p> \r\n\r\n       }\r\n       {\r\n        filteredExpenses.length > 0 &&  (filteredExpenses.map((expense) => (\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            />\r\n          )))\r\n       } */}\r\n\r\n\r\n    </Card>\r\n  );\r\n\r\n}\r\n\r\nexport default Expenses;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,MAAM,CAAC;EAExD,SAASY,mBAAmBA,CAACC,YAAY,EAAE;IACzCF,eAAe,CAACE,YAAY,CAAC;EAC/B;EAEA,MAAMC,gBAAgB,GAAGN,KAAK,CAACO,KAAK,CAACC,MAAM,CAACC,WAAW,IAAIA,WAAW,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKV,YAAY,CAAC;;EAEtH;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAW,OAAO,CAACC,GAAG,CAACR,gBAAgB,CAAC;EAC7B,oBACER,OAAA,CAACL,IAAI;IAACsB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACxBlB,OAAA,CAACJ,cAAc;MAACuB,cAAc,EAAEb,mBAAoB;MAACC,YAAY,EAAEH;IAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnFvB,OAAA,CAACF,aAAa;MAAC0B,QAAQ,EAAEhB;IAAiB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC5CvB,OAAA,CAACH,WAAW;MAACW,gBAAgB,EAAEA;IAAiB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAiC/C,CAAC;AAGX;AAACpB,EAAA,CAjEQF,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAmEjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}