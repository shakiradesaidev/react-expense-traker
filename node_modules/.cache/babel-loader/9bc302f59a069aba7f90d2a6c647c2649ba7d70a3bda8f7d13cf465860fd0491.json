{"ast":null,"code":"var _jsxFileName = \"C:\\\\expense-tracker\\\\expense-tracker-react-app\\\\src\\\\components\\\\NewExpenses\\\\SearchForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = 'https://lnbczvfntvqximviyrxm.supabase.co/';\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxuYmN6dmZudHZxeGltdml5cnhtIiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODczNzgzMjcsImV4cCI6MjAwMjk1NDMyN30.sJTtkRZCutBVfCG7kH4ESQAH5F2f8kFQXQYMtXLfUrA';\nconst supabase = createClient(supabaseUrl, supabaseKey);\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  async function fetchTodos() {\n    const {\n      data,\n      error\n    } = await supabase.from('todos').select('*');\n    if (error) {\n      console.log('Error fetching todos:', error.message);\n      return;\n    }\n    setTodos(data);\n  }\n  async function addTodo() {\n    if (!newTodo) return;\n    const {\n      data,\n      error\n    } = await supabase.from('todos').insert([{\n      task: newTodo\n    }]);\n    if (error) {\n      console.log('Error adding todo:', error.message);\n      return;\n    }\n    setTodos([...todos, ...data]);\n    setNewTodo('');\n  }\n  async function deleteTodo(id) {\n    const {\n      error\n    } = await supabase.from('todos').delete().match({\n      id\n    });\n    if (error) {\n      console.log('Error deleting todo:', error.message);\n      return;\n    }\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n  async function createCalendarEvent() {\n    const {\n      user,\n      error: authError\n    } = await supabase.auth.signIn({\n      provider: 'google'\n    });\n    if (authError) {\n      console.log('Error signing in:', authError.message);\n      return;\n    }\n    const {\n      access_token,\n      expires_in,\n      refresh_token\n    } = user.auth.credentials;\n    const event = {\n      summary: 'New Event',\n      start: {\n        dateTime: new Date().toISOString() // Use the desired start time\n      },\n\n      end: {\n        dateTime: new Date().toISOString() // Use the desired end time\n      }\n    };\n\n    const response = await fetch('https://www.googleapis.com/calendar/v3/calendars/primary/events', {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${access_token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(event)\n    });\n    if (response.ok) {\n      console.log('Event created successfully');\n    } else {\n      console.log('Error creating event:', response.statusText);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTodo,\n      onChange: e => setNewTodo(e.target.value),\n      placeholder: \"Enter a new todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createCalendarEvent,\n      children: \"Create Calendar Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo.task, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodo(todo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5IWrR3qlB9fd4Xrb4YgyFMm9peE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","createClient","jsxDEV","_jsxDEV","supabaseUrl","supabaseKey","supabase","App","_s","todos","setTodos","newTodo","setNewTodo","fetchTodos","data","error","from","select","console","log","message","addTodo","insert","task","deleteTodo","id","delete","match","filter","todo","createCalendarEvent","user","authError","auth","signIn","provider","access_token","expires_in","refresh_token","credentials","event","summary","start","dateTime","Date","toISOString","end","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","statusText","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["C:/expense-tracker/expense-tracker-react-app/src/components/NewExpenses/SearchForm.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = 'https://lnbczvfntvqximviyrxm.supabase.co/';\r\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxuYmN6dmZudHZxeGltdml5cnhtIiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODczNzgzMjcsImV4cCI6MjAwMjk1NDMyN30.sJTtkRZCutBVfCG7kH4ESQAH5F2f8kFQXQYMtXLfUrA';\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [newTodo, setNewTodo] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchTodos();\r\n  }, []);\r\n\r\n  async function fetchTodos() {\r\n    const { data, error } = await supabase.from('todos').select('*');\r\n    if (error) {\r\n      console.log('Error fetching todos:', error.message);\r\n      return;\r\n    }\r\n    setTodos(data);\r\n  }\r\n\r\n  async function addTodo() {\r\n    if (!newTodo) return;\r\n    const { data, error } = await supabase.from('todos').insert([{ task: newTodo }]);\r\n    if (error) {\r\n      console.log('Error adding todo:', error.message);\r\n      return;\r\n    }\r\n    setTodos([...todos, ...data]);\r\n    setNewTodo('');\r\n  }\r\n\r\n  async function deleteTodo(id) {\r\n    const { error } = await supabase.from('todos').delete().match({ id });\r\n    if (error) {\r\n      console.log('Error deleting todo:', error.message);\r\n      return;\r\n    }\r\n    setTodos(todos.filter(todo => todo.id !== id));\r\n  }\r\n\r\n  async function createCalendarEvent() {\r\n    const { user, error: authError } = await supabase.auth.signIn({\r\n      provider: 'google',\r\n    });\r\n\r\n    if (authError) {\r\n      console.log('Error signing in:', authError.message);\r\n      return;\r\n    }\r\n\r\n    const { access_token, expires_in, refresh_token } = user.auth.credentials;\r\n\r\n    const event = {\r\n      summary: 'New Event',\r\n      start: {\r\n        dateTime: new Date().toISOString(), // Use the desired start time\r\n      },\r\n      end: {\r\n        dateTime: new Date().toISOString(), // Use the desired end time\r\n      },\r\n    };\r\n\r\n    const response = await fetch('https://www.googleapis.com/calendar/v3/calendars/primary/events', {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${access_token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(event),\r\n    });\r\n\r\n    if (response.ok) {\r\n      console.log('Event created successfully');\r\n    } else {\r\n      console.log('Error creating event:', response.statusText);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Todo List</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={newTodo}\r\n        onChange={(e) => setNewTodo(e.target.value)}\r\n        placeholder=\"Enter a new todo\"\r\n      />\r\n      <button onClick={addTodo}>Add Todo</button>\r\n      <button onClick={createCalendarEvent}>Create Calendar Event</button>\r\n      <ul>\r\n        {todos.map((todo) => (\r\n          <li key={todo.id}>\r\n            {todo.task}\r\n            <button onClick={() => deleteTodo(todo.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}