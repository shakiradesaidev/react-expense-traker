{"ast":null,"code":"var _jsxFileName = \"C:\\\\expense-tracker\\\\expense-tracker-react-app\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport ExpenseItem from \"./ExpenseItem\";\nimport React, { useState } from 'react';\nimport './Expenses.css';\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2020');\n  function filterChangeHandler(selectedYear) {\n    setFilteredYear(selectedYear);\n  }\n  const filteredExpenses = props.items.filter(filterItems => filterItems.date.getFullYear().toString() === filteredYear);\n  let expenseContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Expenses not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 22\n  }, this);\n  if (filteredExpenses.length > 0) {\n    expenseContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this));\n  }\n  console.log(filteredExpenses);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      onChangeFilter: filterChangeHandler,\n      selectedYear: filteredYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), expenseContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Expenses, \"d6AxVjxjRbYO2YFEia8LjUybrDc=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["ExpenseItem","React","useState","Card","ExpensesFilter","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","filterItems","date","getFullYear","toString","expenseContent","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","expense","title","amount","id","console","log","className","onChangeFilter","_c","$RefreshReg$"],"sources":["C:/expense-tracker/expense-tracker-react-app/src/components/Expenses/Expenses.js"],"sourcesContent":["import ExpenseItem from \"./ExpenseItem\";\r\nimport React, { useState } from 'react';\r\n\r\nimport './Expenses.css';\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n  function filterChangeHandler(selectedYear) {\r\n    setFilteredYear(selectedYear);\r\n  }\r\n\r\n const filteredExpenses = props.items.filter(filterItems => filterItems.date.getFullYear().toString() === filteredYear);\r\n \r\nlet expenseContent = <p>Expenses not found</p> \r\n\r\nif(filteredExpenses.length > 0){\r\n    expenseContent= (\r\n        filteredExpenses.map((expense) => (\r\n          <ExpenseItem\r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          />\r\n        ))\r\n      )\r\n}\r\n\r\n  console.log(filteredExpenses)\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter onChangeFilter={filterChangeHandler} selectedYear={filteredYear} />\r\n\r\n       {expenseContent}\r\n       \r\n       {/* /** By ternery operator  {\r\n        filteredExpenses.length == 0 ? <p>Expenses not found</p> : (\r\n            filteredExpenses.map((expense) => (\r\n              <ExpenseItem\r\n                key={expense.id}\r\n                title={expense.title}\r\n                amount={expense.amount}\r\n                date={expense.date}\r\n              />\r\n            ))\r\n          )\r\n       } */}\r\n\r\n       {/* By Logical and operator {\r\n        filteredExpenses.length === 0 && <p>Expenses not found</p> \r\n\r\n       }\r\n       {\r\n        filteredExpenses.length > 0 &&  (filteredExpenses.map((expense) => (\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            />\r\n          )))\r\n       } */}\r\n\r\n      \r\n    </Card>\r\n  );\r\n\r\n}\r\n\r\nexport default Expenses;\r\n"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,MAAM,CAAC;EAExD,SAASU,mBAAmBA,CAACC,YAAY,EAAE;IACzCF,eAAe,CAACE,YAAY,CAAC;EAC/B;EAED,MAAMC,gBAAgB,GAAGN,KAAK,CAACO,KAAK,CAACC,MAAM,CAACC,WAAW,IAAIA,WAAW,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKV,YAAY,CAAC;EAEvH,IAAIW,cAAc,gBAAGf,OAAA;IAAAgB,QAAA,EAAG;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE9C,IAAGZ,gBAAgB,CAACa,MAAM,GAAG,CAAC,EAAC;IAC3BN,cAAc,GACVP,gBAAgB,CAACc,GAAG,CAAEC,OAAO,iBAC3BvB,OAAA,CAACN,WAAW;MAEV8B,KAAK,EAAED,OAAO,CAACC,KAAM;MACrBC,MAAM,EAAEF,OAAO,CAACE,MAAO;MACvBb,IAAI,EAAEW,OAAO,CAACX;IAAK,GAHdW,OAAO,CAACG,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIhB,CACF,CACF;EACP;EAEEO,OAAO,CAACC,GAAG,CAACpB,gBAAgB,CAAC;EAC7B,oBACER,OAAA,CAACH,IAAI;IAACgC,SAAS,EAAC,UAAU;IAAAb,QAAA,gBACxBhB,OAAA,CAACF,cAAc;MAACgC,cAAc,EAAExB,mBAAoB;MAACC,YAAY,EAAEH;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEjFL,cAAc;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OA+BZ,CAAC;AAGX;AAACjB,EAAA,CA/DQF,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAiEjB,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}