{"ast":null,"code":"var _jsxFileName = \"C:\\\\expense-tracker\\\\expense-tracker-react-app\\\\src\\\\components\\\\NewExpenses\\\\SearchForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = 'YOUR_SUPABASE_URL';\nconst supabaseKey = 'YOUR_SUPABASE_PUBLIC_KEY';\nconst supabase = createClient(supabaseUrl, supabaseKey);\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [session, setSession] = useState(null);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  useEffect(() => {\n    setSession(supabase.auth.session());\n    const {\n      data: listener\n    } = supabase.auth.onAuthStateChange((event, session) => {\n      setSession(session);\n    });\n    return () => {\n      listener.unsubscribe();\n    };\n  }, []);\n  async function fetchTodos() {\n    const {\n      data,\n      error\n    } = await supabase.from('todos').select('*');\n    if (error) {\n      console.log('Error fetching todos:', error.message);\n      return;\n    }\n    setTodos(data);\n  }\n  async function addTodo() {\n    if (!newTodo) return;\n    const {\n      data,\n      error\n    } = await supabase.from('todos').insert([{\n      task: newTodo\n    }]);\n    if (error) {\n      console.log('Error adding todo:', error.message);\n      return;\n    }\n    setTodos([...todos, ...data]);\n    setNewTodo('');\n  }\n  async function deleteTodo(id) {\n    const {\n      error\n    } = await supabase.from('todos').delete().match({\n      id\n    });\n    if (error) {\n      console.log('Error deleting todo:', error.message);\n      return;\n    }\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n  async function createCalendarEvent() {\n    const {\n      user,\n      error: authError\n    } = await supabase.auth.signIn({\n      provider: 'google'\n    });\n    if (authError) {\n      console.log('Error signing in:', authError.message);\n      return;\n    }\n    const event = {\n      summary: 'New Event',\n      start: {\n        dateTime: new Date().toISOString() // Use the desired start time\n      },\n\n      end: {\n        dateTime: new Date().toISOString() // Use the desired end time\n      }\n    };\n\n    // Make the necessary API call to create the calendar event\n    // ...\n\n    console.log('Event created successfully');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), session ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome, \", session.user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => supabase.auth.signOut(),\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => supabase.auth.signIn({\n          provider: 'google'\n        }),\n        children: \"Sign In With Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTodo,\n      onChange: e => setNewTodo(e.target.value),\n      placeholder: \"Enter a new todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createCalendarEvent,\n      children: \"Create Calendar Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo.task, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodo(todo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FaAzLylN8uPBr6xzv1Q4jB+lUNc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","createClient","jsxDEV","_jsxDEV","Fragment","_Fragment","supabaseUrl","supabaseKey","supabase","App","_s","todos","setTodos","newTodo","setNewTodo","session","setSession","fetchTodos","auth","data","listener","onAuthStateChange","event","unsubscribe","error","from","select","console","log","message","addTodo","insert","task","deleteTodo","id","delete","match","filter","todo","createCalendarEvent","user","authError","signIn","provider","summary","start","dateTime","Date","toISOString","end","children","fileName","_jsxFileName","lineNumber","columnNumber","email","onClick","signOut","type","value","onChange","e","target","placeholder","map","_c","$RefreshReg$"],"sources":["C:/expense-tracker/expense-tracker-react-app/src/components/NewExpenses/SearchForm.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = 'YOUR_SUPABASE_URL';\r\nconst supabaseKey = 'YOUR_SUPABASE_PUBLIC_KEY';\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [newTodo, setNewTodo] = useState('');\r\n  const [session, setSession] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchTodos();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSession(supabase.auth.session());\r\n    const { data: listener } = supabase.auth.onAuthStateChange((event, session) => {\r\n      setSession(session);\r\n    });\r\n    return () => {\r\n      listener.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  async function fetchTodos() {\r\n    const { data, error } = await supabase.from('todos').select('*');\r\n    if (error) {\r\n      console.log('Error fetching todos:', error.message);\r\n      return;\r\n    }\r\n    setTodos(data);\r\n  }\r\n\r\n  async function addTodo() {\r\n    if (!newTodo) return;\r\n    const { data, error } = await supabase.from('todos').insert([{ task: newTodo }]);\r\n    if (error) {\r\n      console.log('Error adding todo:', error.message);\r\n      return;\r\n    }\r\n    setTodos([...todos, ...data]);\r\n    setNewTodo('');\r\n  }\r\n\r\n  async function deleteTodo(id) {\r\n    const { error } = await supabase.from('todos').delete().match({ id });\r\n    if (error) {\r\n      console.log('Error deleting todo:', error.message);\r\n      return;\r\n    }\r\n    setTodos(todos.filter((todo) => todo.id !== id));\r\n  }\r\n\r\n  async function createCalendarEvent() {\r\n    const { user, error: authError } = await supabase.auth.signIn({\r\n      provider: 'google',\r\n    });\r\n\r\n    if (authError) {\r\n      console.log('Error signing in:', authError.message);\r\n      return;\r\n    }\r\n\r\n    const event = {\r\n      summary: 'New Event',\r\n      start: {\r\n        dateTime: new Date().toISOString(), // Use the desired start time\r\n      },\r\n      end: {\r\n        dateTime: new Date().toISOString(), // Use the desired end time\r\n      },\r\n    };\r\n\r\n    // Make the necessary API call to create the calendar event\r\n    // ...\r\n\r\n    console.log('Event created successfully');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Todo List</h1>\r\n      {session ? (\r\n        <>\r\n          <p>Welcome, {session.user.email}</p>\r\n          <button onClick={() => supabase.auth.signOut()}>Sign Out</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <button onClick={() => supabase.auth.signIn({ provider: 'google' })}>\r\n            Sign In With Google\r\n          </button>\r\n        </>\r\n      )}\r\n      <input\r\n        type=\"text\"\r\n        value={newTodo}\r\n        onChange={(e) => setNewTodo(e.target.value)}\r\n        placeholder=\"Enter a new todo\"\r\n      />\r\n      <button onClick={addTodo}>Add Todo</button>\r\n      <button onClick={createCalendarEvent}>Create Calendar Event</button>\r\n      <ul>\r\n        {todos.map((todo) => (\r\n          <li key={todo.id}>\r\n            {todo.task}\r\n            <button onClick={() => deleteTodo(todo.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}